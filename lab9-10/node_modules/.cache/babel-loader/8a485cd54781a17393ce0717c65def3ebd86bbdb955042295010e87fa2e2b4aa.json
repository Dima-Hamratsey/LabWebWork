{"ast":null,"code":"const express = require('express');\nconst cors = require('cors');\nconst path = require('path');\nconst app = express();\napp.use(cors());\napp.use(express.json());\nlet cart = []; // Масив для зберігання товарів у кошику\n\nconst cars = [\n// Ваші дані про машини тут\n// Наприклад:\n{\n  id: 1,\n  brand: 'Toyota',\n  model: 'Corolla 2021',\n  power: 150,\n  maxSpeed: 180,\n  image: '/assets/toyota-corolla.jpg'\n}\n// Інші машини...\n];\n\n// Маршрут для отримання всіх автомобілів\napp.get('/api/cars', (req, res) => {\n  res.json(cars);\n});\n\n// Маршрут для отримання деталей автомобіля за ID\napp.get('/api/cars/:id', (req, res) => {\n  const carId = parseInt(req.params.id);\n  const car = cars.find(c => c.id === carId);\n  if (!car) {\n    return res.status(404).json({\n      error: 'Машина не знайдена'\n    });\n  }\n  res.json(car);\n});\n\n// Додавання автомобіля до кошика\napp.post('/api/cart', (req, res) => {\n  const {\n    id,\n    configuration,\n    count\n  } = req.body;\n  const car = cars.find(c => c.id === id);\n  if (!car) {\n    return res.status(404).json({\n      error: 'Машина не знайдена'\n    });\n  }\n  // Додаємо товар до кошика\n  const cartItem = {\n    ...car,\n    configuration,\n    count\n  };\n  cart.push(cartItem);\n  res.json({\n    message: 'Машина додана до кошика',\n    cart\n  });\n});\n\n// Отримання кошика\napp.get('/api/cart', (req, res) => {\n  res.json(cart);\n});\n\n// Очистка кошика\napp.delete('/api/cart', (req, res) => {\n  cart = [];\n  res.json({\n    message: 'Кошик очищено'\n  });\n});\n\n// Запуск сервера\nconst PORT = 5008;\napp.listen(PORT, () => {\n  console.log(`Сервер запущено на порті ${PORT}`);\n});","map":{"version":3,"names":["express","require","cors","path","app","use","json","cart","cars","id","brand","model","power","maxSpeed","image","get","req","res","carId","parseInt","params","car","find","c","status","error","post","configuration","count","body","cartItem","push","message","delete","PORT","listen","console","log"],"sources":["/Users/dimarik/Desktop/web_labs/lab10/src/api.js"],"sourcesContent":["const express = require('express');\nconst cors = require('cors');\nconst path = require('path');\nconst app = express();\n\napp.use(cors());\napp.use(express.json());\n\nlet cart = [];  // Масив для зберігання товарів у кошику\n\nconst cars = [\n  // Ваші дані про машини тут\n  // Наприклад:\n  { id: 1, brand: 'Toyota', model: 'Corolla 2021', power: 150, maxSpeed: 180, image: '/assets/toyota-corolla.jpg' },\n  // Інші машини...\n];\n\n// Маршрут для отримання всіх автомобілів\napp.get('/api/cars', (req, res) => {\n  res.json(cars);\n});\n\n// Маршрут для отримання деталей автомобіля за ID\napp.get('/api/cars/:id', (req, res) => {\n  const carId = parseInt(req.params.id);\n  const car = cars.find((c) => c.id === carId);\n  if (!car) {\n    return res.status(404).json({ error: 'Машина не знайдена' });\n  }\n  res.json(car);\n});\n\n// Додавання автомобіля до кошика\napp.post('/api/cart', (req, res) => {\n  const { id, configuration, count } = req.body;\n  const car = cars.find((c) => c.id === id);\n  if (!car) {\n    return res.status(404).json({ error: 'Машина не знайдена' });\n  }\n  // Додаємо товар до кошика\n  const cartItem = { ...car, configuration, count };\n  cart.push(cartItem);\n  res.json({ message: 'Машина додана до кошика', cart });\n});\n\n// Отримання кошика\napp.get('/api/cart', (req, res) => {\n  res.json(cart);\n});\n\n// Очистка кошика\napp.delete('/api/cart', (req, res) => {\n  cart = [];\n  res.json({ message: 'Кошик очищено' });\n});\n\n// Запуск сервера\nconst PORT = 5008;\napp.listen(PORT, () => {\n  console.log(`Сервер запущено на порті ${PORT}`);\n});\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAME,IAAI,GAAGF,OAAO,CAAC,MAAM,CAAC;AAC5B,MAAMG,GAAG,GAAGJ,OAAO,CAAC,CAAC;AAErBI,GAAG,CAACC,GAAG,CAACH,IAAI,CAAC,CAAC,CAAC;AACfE,GAAG,CAACC,GAAG,CAACL,OAAO,CAACM,IAAI,CAAC,CAAC,CAAC;AAEvB,IAAIC,IAAI,GAAG,EAAE,CAAC,CAAE;;AAEhB,MAAMC,IAAI,GAAG;AACX;AACA;AACA;EAAEC,EAAE,EAAE,CAAC;EAAEC,KAAK,EAAE,QAAQ;EAAEC,KAAK,EAAE,cAAc;EAAEC,KAAK,EAAE,GAAG;EAAEC,QAAQ,EAAE,GAAG;EAAEC,KAAK,EAAE;AAA6B;AAChH;AAAA,CACD;;AAED;AACAV,GAAG,CAACW,GAAG,CAAC,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACjCA,GAAG,CAACX,IAAI,CAACE,IAAI,CAAC;AAChB,CAAC,CAAC;;AAEF;AACAJ,GAAG,CAACW,GAAG,CAAC,eAAe,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACrC,MAAMC,KAAK,GAAGC,QAAQ,CAACH,GAAG,CAACI,MAAM,CAACX,EAAE,CAAC;EACrC,MAAMY,GAAG,GAAGb,IAAI,CAACc,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACd,EAAE,KAAKS,KAAK,CAAC;EAC5C,IAAI,CAACG,GAAG,EAAE;IACR,OAAOJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAAClB,IAAI,CAAC;MAAEmB,KAAK,EAAE;IAAqB,CAAC,CAAC;EAC9D;EACAR,GAAG,CAACX,IAAI,CAACe,GAAG,CAAC;AACf,CAAC,CAAC;;AAEF;AACAjB,GAAG,CAACsB,IAAI,CAAC,WAAW,EAAE,CAACV,GAAG,EAAEC,GAAG,KAAK;EAClC,MAAM;IAAER,EAAE;IAAEkB,aAAa;IAAEC;EAAM,CAAC,GAAGZ,GAAG,CAACa,IAAI;EAC7C,MAAMR,GAAG,GAAGb,IAAI,CAACc,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACd,EAAE,KAAKA,EAAE,CAAC;EACzC,IAAI,CAACY,GAAG,EAAE;IACR,OAAOJ,GAAG,CAACO,MAAM,CAAC,GAAG,CAAC,CAAClB,IAAI,CAAC;MAAEmB,KAAK,EAAE;IAAqB,CAAC,CAAC;EAC9D;EACA;EACA,MAAMK,QAAQ,GAAG;IAAE,GAAGT,GAAG;IAAEM,aAAa;IAAEC;EAAM,CAAC;EACjDrB,IAAI,CAACwB,IAAI,CAACD,QAAQ,CAAC;EACnBb,GAAG,CAACX,IAAI,CAAC;IAAE0B,OAAO,EAAE,yBAAyB;IAAEzB;EAAK,CAAC,CAAC;AACxD,CAAC,CAAC;;AAEF;AACAH,GAAG,CAACW,GAAG,CAAC,WAAW,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACjCA,GAAG,CAACX,IAAI,CAACC,IAAI,CAAC;AAChB,CAAC,CAAC;;AAEF;AACAH,GAAG,CAAC6B,MAAM,CAAC,WAAW,EAAE,CAACjB,GAAG,EAAEC,GAAG,KAAK;EACpCV,IAAI,GAAG,EAAE;EACTU,GAAG,CAACX,IAAI,CAAC;IAAE0B,OAAO,EAAE;EAAgB,CAAC,CAAC;AACxC,CAAC,CAAC;;AAEF;AACA,MAAME,IAAI,GAAG,IAAI;AACjB9B,GAAG,CAAC+B,MAAM,CAACD,IAAI,EAAE,MAAM;EACrBE,OAAO,CAACC,GAAG,CAAC,4BAA4BH,IAAI,EAAE,CAAC;AACjD,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}