{"ast":null,"code":"const initialState = {\n  cart: []\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case 'ADD_TO_CART':\n      const existingItem = state.cart.find(item => item.id === action.payload.id);\n      if (existingItem) {\n        return {\n          ...state,\n          cart: state.cart.map(item => item.id === action.payload.id ? {\n            ...item,\n            quantity: item.quantity + action.payload.quantity\n          } : item)\n        };\n      } else {\n        return {\n          ...state,\n          cart: [...state.cart, {\n            ...action.payload,\n            quantity: action.payload.quantity || 1\n          }]\n        };\n      }\n    case 'REMOVE_FROM_CART':\n      return {\n        ...state,\n        cart: state.cart.filter(item => item.id !== action.payload)\n      };\n    case 'UPDATE_QUANTITY':\n      return {\n        ...state,\n        cart: state.cart.map(item => item.id === action.payload.id ? {\n          ...item,\n          quantity: action.payload.quantity\n        } : item)\n      };\n    default:\n      return state;\n  }\n};\nexport default reducer;","map":{"version":3,"names":["initialState","cart","reducer","state","action","type","existingItem","find","item","id","payload","map","quantity","filter"],"sources":["/Users/dimarik/Desktop/web_labs/lab10/src/reducers.js"],"sourcesContent":["const initialState = {\n    cart: [],\n  };\n  \n  const reducer = (state = initialState, action) => {\n    switch (action.type) {\n      case 'ADD_TO_CART':\n        const existingItem = state.cart.find((item) => item.id === action.payload.id);\n        if (existingItem) {\n          return {\n            ...state,\n            cart: state.cart.map((item) =>\n              item.id === action.payload.id\n                ? { ...item, quantity: item.quantity + action.payload.quantity }\n                : item\n            ),\n          };\n        } else {\n          return {\n            ...state,\n            cart: [...state.cart, { ...action.payload, quantity: action.payload.quantity || 1 }],\n          };\n        }\n      case 'REMOVE_FROM_CART':\n        return {\n          ...state,\n          cart: state.cart.filter((item) => item.id !== action.payload),\n        };\n      case 'UPDATE_QUANTITY':\n        return {\n          ...state,\n          cart: state.cart.map((item) =>\n            item.id === action.payload.id ? { ...item, quantity: action.payload.quantity } : item\n          ),\n        };\n      default:\n        return state;\n    }\n  };\n  \n  export default reducer;\n  "],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACjBC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,OAAO,GAAGA,CAACC,KAAK,GAAGH,YAAY,EAAEI,MAAM,KAAK;EAChD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAK,aAAa;MAChB,MAAMC,YAAY,GAAGH,KAAK,CAACF,IAAI,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,CAAC;MAC7E,IAAIH,YAAY,EAAE;QAChB,OAAO;UACL,GAAGH,KAAK;UACRF,IAAI,EAAEE,KAAK,CAACF,IAAI,CAACU,GAAG,CAAEH,IAAI,IACxBA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,GACzB;YAAE,GAAGD,IAAI;YAAEI,QAAQ,EAAEJ,IAAI,CAACI,QAAQ,GAAGR,MAAM,CAACM,OAAO,CAACE;UAAS,CAAC,GAC9DJ,IACN;QACF,CAAC;MACH,CAAC,MAAM;QACL,OAAO;UACL,GAAGL,KAAK;UACRF,IAAI,EAAE,CAAC,GAAGE,KAAK,CAACF,IAAI,EAAE;YAAE,GAAGG,MAAM,CAACM,OAAO;YAAEE,QAAQ,EAAER,MAAM,CAACM,OAAO,CAACE,QAAQ,IAAI;UAAE,CAAC;QACrF,CAAC;MACH;IACF,KAAK,kBAAkB;MACrB,OAAO;QACL,GAAGT,KAAK;QACRF,IAAI,EAAEE,KAAK,CAACF,IAAI,CAACY,MAAM,CAAEL,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO;MAC9D,CAAC;IACH,KAAK,iBAAiB;MACpB,OAAO;QACL,GAAGP,KAAK;QACRF,IAAI,EAAEE,KAAK,CAACF,IAAI,CAACU,GAAG,CAAEH,IAAI,IACxBA,IAAI,CAACC,EAAE,KAAKL,MAAM,CAACM,OAAO,CAACD,EAAE,GAAG;UAAE,GAAGD,IAAI;UAAEI,QAAQ,EAAER,MAAM,CAACM,OAAO,CAACE;QAAS,CAAC,GAAGJ,IACnF;MACF,CAAC;IACH;MACE,OAAOL,KAAK;EAChB;AACF,CAAC;AAED,eAAeD,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}