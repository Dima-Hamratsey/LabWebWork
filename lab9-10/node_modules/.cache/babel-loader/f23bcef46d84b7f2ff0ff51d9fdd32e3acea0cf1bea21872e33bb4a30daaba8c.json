{"ast":null,"code":"import axios from 'axios'; // Імпорт бібліотеки axios для запитів\n\n// Оголошення базового URL для вашого API\nconst API_URL = 'http://localhost:5004'; // Замість цього використовуйте ваш правильний URL\n\n// Функція для отримання всіх машин\nexport const fetchCars = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/cars`);\n    return response.data; // Повертаємо дані\n  } catch (error) {\n    console.error('Помилка при отриманні даних:', error);\n    return []; // Якщо є помилка, повертаємо порожній масив\n  }\n};\n\n// Функція для отримання деталей конкретного автомобіля\nexport const fetchCarDetails = async id => {\n  try {\n    const response = await axios.get(`${API_URL}/cars/${id}`); // Використовуємо правильний шлях\n    return response.data;\n  } catch (error) {\n    console.error('Помилка при отриманні даних автомобіля:', error);\n    return null; // Якщо автомобіль не знайдено, повертаємо null\n  }\n};\n\n// Функція для додавання до кошика\nexport const addToCart = async carData => {\n  try {\n    const response = await axios.post(`${API_URL}/cart`, carData); // Додаємо машину до кошика\n    return response.data;\n  } catch (error) {\n    console.error('Помилка при додаванні до кошика:', error);\n    return null; // Якщо помилка, повертаємо null\n  }\n};\n\n// Функція для отримання кошика\nexport const fetchCart = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/cart`); // Отримуємо дані кошика\n    return response.data;\n  } catch (error) {\n    console.error('Помилка при отриманні кошика:', error);\n    return null; // Якщо помилка, повертаємо null\n  }\n};\n\n// Функція для очищення кошика\nexport const clearCart = async () => {\n  try {\n    const response = await axios.delete(`${API_URL}/cart`); // Очищаємо кошик\n    return response.data;\n  } catch (error) {\n    console.error('Помилка при очищенні кошика:', error);\n    return null; // Якщо помилка, повертаємо null\n  }\n};","map":{"version":3,"names":["axios","API_URL","fetchCars","response","get","data","error","console","fetchCarDetails","id","addToCart","carData","post","fetchCart","clearCart","delete"],"sources":["/Users/dimarik/Desktop/web_labs/lab10/src/api.js"],"sourcesContent":["import axios from 'axios'; // Імпорт бібліотеки axios для запитів\n\n// Оголошення базового URL для вашого API\nconst API_URL = 'http://localhost:5004';  // Замість цього використовуйте ваш правильний URL\n\n// Функція для отримання всіх машин\nexport const fetchCars = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/cars`);\n    return response.data; // Повертаємо дані\n  } catch (error) {\n    console.error('Помилка при отриманні даних:', error);\n    return [];  // Якщо є помилка, повертаємо порожній масив\n  }\n};\n\n// Функція для отримання деталей конкретного автомобіля\nexport const fetchCarDetails = async (id) => {\n  try {\n    const response = await axios.get(`${API_URL}/cars/${id}`); // Використовуємо правильний шлях\n    return response.data;\n  } catch (error) {\n    console.error('Помилка при отриманні даних автомобіля:', error);\n    return null;  // Якщо автомобіль не знайдено, повертаємо null\n  }\n};\n\n// Функція для додавання до кошика\nexport const addToCart = async (carData) => {\n  try {\n    const response = await axios.post(`${API_URL}/cart`, carData);  // Додаємо машину до кошика\n    return response.data;\n  } catch (error) {\n    console.error('Помилка при додаванні до кошика:', error);\n    return null;  // Якщо помилка, повертаємо null\n  }\n};\n\n// Функція для отримання кошика\nexport const fetchCart = async () => {\n  try {\n    const response = await axios.get(`${API_URL}/cart`);  // Отримуємо дані кошика\n    return response.data;\n  } catch (error) {\n    console.error('Помилка при отриманні кошика:', error);\n    return null;  // Якщо помилка, повертаємо null\n  }\n};\n\n// Функція для очищення кошика\nexport const clearCart = async () => {\n  try {\n    const response = await axios.delete(`${API_URL}/cart`);  // Очищаємо кошик\n    return response.data;\n  } catch (error) {\n    console.error('Помилка при очищенні кошика:', error);\n    return null;  // Якщо помилка, повертаємо null\n  }\n};\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC,CAAC;;AAE3B;AACA,MAAMC,OAAO,GAAG,uBAAuB,CAAC,CAAE;;AAE1C;AACA,OAAO,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,OAAO,CAAC;IACnD,OAAOE,QAAQ,CAACE,IAAI,CAAC,CAAC;EACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,EAAE,CAAC,CAAE;EACd;AACF,CAAC;;AAED;AACA,OAAO,MAAME,eAAe,GAAG,MAAOC,EAAE,IAAK;EAC3C,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,SAASQ,EAAE,EAAE,CAAC,CAAC,CAAC;IAC3D,OAAON,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IAC/D,OAAO,IAAI,CAAC,CAAE;EAChB;AACF,CAAC;;AAED;AACA,OAAO,MAAMI,SAAS,GAAG,MAAOC,OAAO,IAAK;EAC1C,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMH,KAAK,CAACY,IAAI,CAAC,GAAGX,OAAO,OAAO,EAAEU,OAAO,CAAC,CAAC,CAAE;IAChE,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IACxD,OAAO,IAAI,CAAC,CAAE;EAChB;AACF,CAAC;;AAED;AACA,OAAO,MAAMO,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMH,KAAK,CAACI,GAAG,CAAC,GAAGH,OAAO,OAAO,CAAC,CAAC,CAAE;IACtD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACrD,OAAO,IAAI,CAAC,CAAE;EAChB;AACF,CAAC;;AAED;AACA,OAAO,MAAMQ,SAAS,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMH,KAAK,CAACe,MAAM,CAAC,GAAGd,OAAO,OAAO,CAAC,CAAC,CAAE;IACzD,OAAOE,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;IACpD,OAAO,IAAI,CAAC,CAAE;EAChB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}