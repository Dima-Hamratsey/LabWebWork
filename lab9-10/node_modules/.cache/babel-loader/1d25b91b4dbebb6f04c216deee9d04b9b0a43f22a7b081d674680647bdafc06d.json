{"ast":null,"code":"var _jsxFileName = \"/Users/dimarik/Desktop/web_labs/lab10/src/carcontext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CarContext = /*#__PURE__*/createContext();\nexport const CarProvider = ({\n  children\n}) => {\n  _s();\n  const [carList, setCarList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    loadCars();\n  }, []);\n  const loadCars = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get('http://localhost:5000/api/cars');\n      setCarList(response.data);\n    } catch (error) {\n      console.error('Error fetching cars:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CarContext.Provider, {\n    value: {\n      carList,\n      isLoading\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(CarProvider, \"DcL/TSPfmjeHHfngZcXCLoUuMyA=\");\n_c = CarProvider;\nvar _c;\n$RefreshReg$(_c, \"CarProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","axios","jsxDEV","_jsxDEV","CarContext","CarProvider","children","_s","carList","setCarList","isLoading","setIsLoading","loadCars","response","get","data","error","console","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dimarik/Desktop/web_labs/lab10/src/carcontext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nexport const CarContext = createContext();\n\nexport const CarProvider = ({ children }) => {\n  const [carList, setCarList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    loadCars();\n  }, []);\n\n  const loadCars = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.get('http://localhost:5000/api/cars');\n      setCarList(response.data);\n    } catch (error) {\n      console.error('Error fetching cars:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <CarContext.Provider value={{ carList, isLoading }}>\n      {children}\n    </CarContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACjE,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,UAAU,gBAAGN,aAAa,CAAC,CAAC;AAEzC,OAAO,MAAMO,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAEjDC,SAAS,CAAC,MAAM;IACdY,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3BD,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAME,QAAQ,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,gCAAgC,CAAC;MAClEL,UAAU,CAACI,QAAQ,CAACE,IAAI,CAAC;IAC3B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,SAAS;MACRL,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,oBACER,OAAA,CAACC,UAAU,CAACc,QAAQ;IAACC,KAAK,EAAE;MAAEX,OAAO;MAAEE;IAAU,CAAE;IAAAJ,QAAA,EAChDA;EAAQ;IAAAc,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAE1B,CAAC;AAAChB,EAAA,CAzBWF,WAAW;AAAAmB,EAAA,GAAXnB,WAAW;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}