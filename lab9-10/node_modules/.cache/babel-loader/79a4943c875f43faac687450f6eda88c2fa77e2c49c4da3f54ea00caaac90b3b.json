{"ast":null,"code":"const express = require('express');\nconst cors = require('cors');\nconst path = require('path');\nconst cars = require('./src/car_stock.js'); // Імпортуємо масив автомобілів\n\nconst app = express();\napp.use(cors());\napp.use(express.json());\n\n// Статичні файли\napp.use('/assets', express.static(path.join(__dirname, 'public/assets')));\n\n// Маршрут для отримання всіх автомобілів\napp.get('/cars', (req, res) => {\n  const {\n    search,\n    sort\n  } = req.query;\n  let filteredCars = cars;\n  if (search) {\n    filteredCars = cars.filter(car => car.brand.toLowerCase().includes(search.toLowerCase()) || car.model.toLowerCase().includes(search.toLowerCase()));\n  }\n  if (sort === 'asc') {\n    filteredCars.sort((a, b) => a.maxSpeed - b.maxSpeed);\n  } else if (sort === 'desc') {\n    filteredCars.sort((a, b) => b.maxSpeed - a.maxSpeed);\n  }\n  res.json(filteredCars);\n});\n\n// Маршрут для отримання деталей автомобіля за ID\napp.get('/cars/:id', (req, res) => {\n  const carId = parseInt(req.params.id, 10);\n  if (isNaN(carId)) {\n    return res.status(400).json({\n      error: 'Некоректний ID'\n    });\n  }\n  const car = cars.find(c => c.id === carId);\n  if (car) {\n    res.json(car);\n  } else {\n    res.status(404).json({\n      error: 'Автомобіль не знайдено'\n    });\n  }\n});\n\n// Маршрут для підрахунку загальної швидкості\napp.get('/cars/total-speed', (req, res) => {\n  const {\n    search\n  } = req.query;\n  let filteredCars = cars;\n  try {\n    if (search) {\n      filteredCars = cars.filter(car => car.brand.toLowerCase().includes(search.toLowerCase()) || car.model.toLowerCase().includes(search.toLowerCase()));\n    }\n    if (!filteredCars || filteredCars.length === 0) {\n      return res.status(404).json({\n        error: 'Жодного автомобіля не знайдено'\n      });\n    }\n    const totalSpeed = filteredCars.reduce((sum, car) => sum + car.maxSpeed, 0);\n    res.json({\n      totalSpeed\n    });\n  } catch (error) {\n    res.status(500).json({\n      error: 'Внутрішня помилка сервера'\n    });\n  }\n});\n\n// Маршрут для додавання автомобіля до кошика\napp.post('/cart', (req, res) => {\n  const {\n    carId,\n    configuration,\n    quantity\n  } = req.body;\n  if (!carId || !quantity) {\n    return res.status(400).json({\n      error: 'Неправильні дані для додавання до кошика'\n    });\n  }\n  console.log(`Додано до кошика: Автомобіль ID ${carId}, Конфігурація: ${configuration}, Кількість: ${quantity}`);\n  res.status(201).json({\n    message: 'Автомобіль успішно додано до кошика'\n  });\n});\n\n// Запуск сервера\nconst PORT = 5005;\napp.listen(PORT, () => {\n  console.log(`Сервер запущено на порті ${PORT}`);\n});","map":{"version":3,"names":["express","require","cors","path","cars","app","use","json","static","join","__dirname","get","req","res","search","sort","query","filteredCars","filter","car","brand","toLowerCase","includes","model","a","b","maxSpeed","carId","parseInt","params","id","isNaN","status","error","find","c","length","totalSpeed","reduce","sum","post","configuration","quantity","body","console","log","message","PORT","listen"],"sources":["/Users/dimarik/Desktop/web_labs/lab10/src/api.js"],"sourcesContent":["const express = require('express');\nconst cors = require('cors');\nconst path = require('path');\nconst cars = require('./src/car_stock.js'); // Імпортуємо масив автомобілів\n\nconst app = express();\n\napp.use(cors());\napp.use(express.json());\n\n// Статичні файли\napp.use('/assets', express.static(path.join(__dirname, 'public/assets')));\n\n// Маршрут для отримання всіх автомобілів\napp.get('/cars', (req, res) => {\n  const { search, sort } = req.query;\n\n  let filteredCars = cars;\n\n  if (search) {\n    filteredCars = cars.filter(car =>\n      car.brand.toLowerCase().includes(search.toLowerCase()) ||\n      car.model.toLowerCase().includes(search.toLowerCase())\n    );\n  }\n\n  if (sort === 'asc') {\n    filteredCars.sort((a, b) => a.maxSpeed - b.maxSpeed);\n  } else if (sort === 'desc') {\n    filteredCars.sort((a, b) => b.maxSpeed - a.maxSpeed);\n  }\n\n  res.json(filteredCars);\n});\n\n// Маршрут для отримання деталей автомобіля за ID\napp.get('/cars/:id', (req, res) => {\n  const carId = parseInt(req.params.id, 10);\n\n  if (isNaN(carId)) {\n    return res.status(400).json({ error: 'Некоректний ID' });\n  }\n\n  const car = cars.find((c) => c.id === carId);\n  if (car) {\n    res.json(car);\n  } else {\n    res.status(404).json({ error: 'Автомобіль не знайдено' });\n  }\n});\n\n// Маршрут для підрахунку загальної швидкості\napp.get('/cars/total-speed', (req, res) => {\n  const { search } = req.query;\n\n  let filteredCars = cars;\n\n  try {\n    if (search) {\n      filteredCars = cars.filter(car =>\n        car.brand.toLowerCase().includes(search.toLowerCase()) ||\n        car.model.toLowerCase().includes(search.toLowerCase())\n      );\n    }\n\n    if (!filteredCars || filteredCars.length === 0) {\n      return res.status(404).json({ error: 'Жодного автомобіля не знайдено' });\n    }\n\n    const totalSpeed = filteredCars.reduce((sum, car) => sum + car.maxSpeed, 0);\n    res.json({ totalSpeed });\n  } catch (error) {\n    res.status(500).json({ error: 'Внутрішня помилка сервера' });\n  }\n});\n\n// Маршрут для додавання автомобіля до кошика\napp.post('/cart', (req, res) => {\n  const { carId, configuration, quantity } = req.body;\n\n  if (!carId || !quantity) {\n    return res.status(400).json({ error: 'Неправильні дані для додавання до кошика' });\n  }\n\n  console.log(`Додано до кошика: Автомобіль ID ${carId}, Конфігурація: ${configuration}, Кількість: ${quantity}`);\n\n  res.status(201).json({ message: 'Автомобіль успішно додано до кошика' });\n});\n\n// Запуск сервера\nconst PORT = 5005;\napp.listen(PORT, () => {\n  console.log(`Сервер запущено на порті ${PORT}`);\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}